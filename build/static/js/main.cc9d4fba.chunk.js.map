{"version":3,"sources":["signup/signup.js","login/login.js","content/FormCreate.js","content/FillForm.js","content/Home.js","content/FormPreview.js","content/Dashboard.js","content/Summary.js","App/App.js","registerServiceWorker.js","index.js"],"names":["Axios","defaults","withCredentials","SignUp","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","handleChangeEmail","handleChangeConfirm","handleChangeName","handleDismiss","handleShow","signUpClicked","displayAlert","state","password","email","confPass","name","signInLoading","show","signupStatus","signUpMessage","length","test","String","toLowerCase","e","setState","target","value","react_default","a","createElement","Alert","bsStyle","onDismiss","id","_this2","newUser","post","window","BACKEND","then","json","data","message","catch","err","response","FormGroup","controlId","FormControl","type","placeholder","onChange","validationState","validateEmail","Feedback","getValidationState","HelpBlock","getValidationStateConf","Button","block","disabled","onClick","Component","LogIn","logInClicked","logInLoading","signInError","logInStatus","_this$state","success","token","stateChanger","loggedIn","logOutButtonStatus","CreateForm","handleInputChange","event","checked","defineProperty","handleSubmit","title","formTitle","description","formDescription","listQuestions","questions","alert","history","push","addQuestion","slice","question_text","newQuestion","question_type","newQuestionType","delQuestion","q_name","idx","parseInt","split","splice","isGoing","numberOfGuests","numQuestions","handelSubmit","items","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","index","Panel","Heading","Title","componentClass","className","Body","Footer","handleInputChangeForm","return","Grid","Row","Col","xs","md","PageHeader","ControlLabel","React","FillForm","listAnswers","FormId","match","params","listAnswers_organize","map","answerObj","answer","answers","get","question_id","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref6","_ref5","Unfilled","FormList","route","class","react_router_dom","to","Filled","Due","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref9","_ref8","style","height","fontWeight","winner","display","margin","fontSize","Home","dueList","filledList","unfilledList","concat","due","filled","unfilled","Home_Unfilled","Home_Filled","Home_Due","FormPreview","handleDeleteRequest","form_id","exist","handleDrawRequest","has_drawn","winners","brief_description","max_char_cnt","substring","hyperlink","sm","bsSize","Dashboard","preview_list","console","log","form","item","_id","isDue","entry","content_FormPreview","Summary","range","n","Array","from","keys","_this3","width","padding","question","mapping","A","B","C","D","values","labels","layout","key","ListGroup","ListGroupItem","react_plotly_default","App","logOutClicked","logOutLoadingMessage","logOutLoading","newState","logoutlink","href","react_router","exact","path","component","FormCreate","Tabs","defaultActiveKey","Tab","eventKey","login_login","signup_signup","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cc9d4fba.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './signup.css';\nimport {\n  FormGroup,\n  FormControl,\n  HelpBlock,  \n  Button,\n  Alert,\n} from 'react-bootstrap';\n\nimport Axios from 'axios';\nAxios.defaults.withCredentials = true;\n\nclass SignUp extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\n\n    this.handleChangeConfirm = this.handleChangeConfirm.bind(this);\n\n    this.handleChangeName = this.handleChangeName.bind(this);\n\n    this.handleDismiss = this.handleDismiss.bind(this);\n\n    this.handleShow = this.handleShow.bind(this);\n\n\n    this.signUpClicked = this.signUpClicked.bind(this);\n\n    this.displayAlert = this.displayAlert.bind(this);\n\n    this.state = {\n      password: '',\n      email: '',\n      confPass: '',\n      name: '',\n      signInLoading: false,\n      show: false,\n      signupStatus: 'success',\n      signUpMessage: 'You have signed up successfully. Please check your email for activation.',\n    };\n  }\n\n  validateEmail() {\n    if(this.state.email.length ===0) return null;\n    // eslint-disable-next-line\n    var re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return re.test(String(this.state.email).toLowerCase())?'success':'error';\n  }\n\n  getValidationState() {\n    const length = this.state.password.length;\n    if (length > 8) return 'success';\n    else if (length > 5) return 'warning';\n    else if (length > 0) return 'error';\n    return null;\n  }\n\n  getValidationStateConf() {\n    const length = this.state.confPass.length;\n    if(length === 0 ) return null;\n\n    else if( this.state.password === this.state.confPass ) return 'success';\n\n    else return 'error';\n\n\n  }\n\n  handleChange(e) {\n    this.setState({ password: e.target.value });\n  }\n\n  handleChangeEmail(e) {\n    this.setState({ email: e.target.value });\n  }\n\n  handleChangeConfirm(e) {\n    this.setState({ confPass: e.target.value });\n  }\n\n  handleChangeName(e) {\n    this.setState({ name: e.target.value });\n  }\n\n  handleDismiss() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n\n  displayAlert() {\n    return (\n      <Alert bsStyle={this.state.signupStatus} onDismiss={this.handleDismiss} id=\"alertBox\">\n\n        <p>\n            { this.state.signUpMessage }\n        </p>\n\n      </Alert>\n\n    );\n  }\n\n\n  signUpClicked(e) {\n    this.setState({ signInLoading : true });\n    const newUser = {\n      password: this.state.password,\n      name: this.state.name,\n      email: this.state.email,\n    };\n\n    Axios.post(window.BACKEND +\"/api/account/signup\", newUser)\n      .then(json => {\n        json = json.data\n        if(json.message === \"Signed Up\") {\n          this.setState({\n            signInLoading: false,\n            show: true,\n            signupStatus: 'success',\n            signUpMessage: 'You have signed up successfully. Please check your email for activation.',\n            name: '',\n            password: '',\n            confPass: '',\n            email: '',\n          });\n        }\n      }).\n      catch(err => {\n        this.setState({\n          signInLoading: false,\n          show: true,\n          signupStatus: 'danger',\n          signUpMessage: err.response.data.message,  \n          name: '',\n          password: '',\n          confPass: '',\n          email: '',\n        });\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          <FormGroup\n            controlId=\"signUpName\">\n          <FormControl\n            type=\"text\"\n            value={this.state.name}\n            placeholder=\"Name\"\n            onChange={this.handleChangeName}\n\n          />\n\n        </FormGroup>\n\n\n        <FormGroup\n          controlId=\"signUpEmail\"\n          validationState={this.validateEmail()}\n        >\n\n        <FormControl\n          type=\"email\"\n          value={this.state.email}\n          placeholder=\"Email\"\n          onChange={this.handleChangeEmail}\n        />\n          <FormControl.Feedback />    \n\n        </FormGroup>    \n\n\n        <FormGroup\n          controlId=\"formBasicTextSignupPass\"\n          validationState={this.getValidationState()}\n        >\n\n        <FormControl\n          type=\"password\"\n          value={this.state.password}\n          placeholder=\"Password\"\n          onChange={this.handleChange}\n        />\n          <FormControl.Feedback />\n          <HelpBlock id=\"passwordHelp\">Password must be minimum 8 characters long</HelpBlock>\n        </FormGroup>\n\n        <FormGroup\n          controlId=\"formBasicTextSignupConfPass\"\n          validationState={this.getValidationStateConf()}\n        >\n\n        <FormControl\n          type=\"password\"\n          value={this.state.confPass}\n          placeholder=\"Confirm Password\"\n          onChange={this.handleChangeConfirm}\n        />\n          <FormControl.Feedback />\n\n        </FormGroup>\n\n        <Button\n          block\n          bsStyle=\"warning\"\n          disabled = {this.state.signInLoading}\n          onClick = {this.state.signInLoading ? null : this.signUpClicked}\n        >\n            {this.state.signInLoading ? 'Processing...' : 'Sign Up'}\n      </Button>\n\n\n    </form>\n\n      { this.state.show ? this.displayAlert() : null}\n\n\n\n  </div>\n\n    );\n\n  }\n}\n\nexport default SignUp;\n\n","import React, { Component } from 'react';\nimport './login.css';\nimport {\n  FormGroup,\n  FormControl,\n  Button,\n  Alert,\n} from 'react-bootstrap';\n\nimport Axios from 'axios';\nAxios.defaults.withCredentials = true;\n\nclass LogIn extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\n\n    this.logInClicked = this.logInClicked.bind(this);\n\n    this.handleDismiss = this.handleDismiss.bind(this);\n\n    this.handleShow = this.handleShow.bind(this); \n\n\n    this.displayAlert = this.displayAlert.bind(this);\n\n    this.state = {\n      password: '',\n      email: '',\n      logInLoading: false,\n      signInError: '',\n      show: false,\n      logInStatus: 'danger',\n\n    };\n  }\n\n  validateEmail() {\n    if(this.state.email.length ===0) return null;\n    // eslint-disable-next-line\n    var re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return re.test(String(this.state.email).toLowerCase())?'success':'error';\n  }\n\n  getValidationState() {\n    const length = this.state.password.length;\n    if (length > 8) return 'success';\n    else if (length > 5) return 'warning';\n    else if (length > 0) return 'error';\n    return null;\n  }\n\n  handleChange(e) {\n    this.setState({ password: e.target.value });\n  }\n\n  handleChangeEmail(e) {\n    this.setState({ email: e.target.value });\n  }\n\n  logInClicked() {\n    const {\n      email, \n      password,\n    } = this.state;\n\n    this.setState({\n      logInLoading: true,\n    });\n\n    Axios.post(window.BACKEND + '/api/account/signin', {email: email, password: password})\n      .then(json => {\n        json = json.data\n        if (json.success) {\n          this.setState({\n            logInLoading: false,\n            password: '',\n            email: '',\n            token: json.token,\n            show: true,\n            logInStatus: 'success',\n          });\n\n          this.props.stateChanger({\n            loggedIn: true,\n            token: json.token,\n            logOutButtonStatus: 'warning',\n          });\n        } else {\n          this.setState({\n            signInError: json.message,\n            logInLoading: false,\n            show: true,\n            logInStatus: 'danger',\n          });\n        }\n      })\n      .catch(err => {\n        let message = 'Please fill the form correctly'\n        this.setState({\n          signInError: message,\n          logInLoading: false,\n          show: true,\n          logInStatus: 'danger',\n        });\n      })\n\n  }\n\n\n  handleDismiss() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n\n  displayAlert() {\n    return (\n      <Alert bsStyle={this.state.logInStatus} onDismiss={this.handleDismiss} id=\"alertBox\">\n\n        <p>\n            { this.state.signInError }\n        </p>\n\n      </Alert>\n\n    );\n  }\n\n\n\n\n\n  render() {\n    return (\n      <div>\n        <form>\n          <FormGroup\n            controlId=\"LogInEmail\"\n            validationState={this.validateEmail()}\n          >\n\n          <FormControl\n            type=\"email\"\n            value = {this.state.email}\n            placeholder=\"Email\"\n            onChange={this.handleChangeEmail}\n          />\n            <FormControl.Feedback />    \n\n          </FormGroup>    \n\n\n          <FormGroup\n            controlId=\"formBasicText\"\n            validationState={this.getValidationState()}\n          >\n\n          <FormControl\n            type=\"password\"\n            value={this.state.password}\n            placeholder=\"Password\"\n            onChange={this.handleChange}\n          />\n            <FormControl.Feedback />\n\n          </FormGroup>\n\n\n\n        </form>\n\n        <Button\n          block\n          bsStyle=\"success\"\n          disabled = {this.state.logInLoading}\n          onClick = {this.state.logInLoading ? null : this.logInClicked}\n        >\n            {this.state.logInLoading ? 'Authenticating...' : 'Log In'}\n      </Button>\n\n        { this.state.show ? this.displayAlert() : null}\n\n\n    </div>\n\n    );\n\n  }\n}\n\nexport default LogIn;\n\n","import React, { Component } from 'react';\nimport {\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  FormLabel,\n  Button,\n  Alert,\n  Form,\n  Grid,\n  Row,\n  Col,\n  Tabs,\n  Tab,\n  Panel,\n  PageHeader\n} from 'react-bootstrap';\n\nimport Axios from 'axios';\nAxios.defaults.withCredentials = true;\n\n\nclass CreateForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isGoing: true,\n      numberOfGuests: 2,\n      formTitle: \"Example Form Title\",\n      formDescription: \"Example Form Description\",\n      numQuestions: 1,\n      listQuestions: [],\n      newQuestion: \"Example Question\",\n      newQuestionType: \"text\"\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.addQuestion = this.addQuestion.bind(this);\n    this.handelSubmit = this.handleSubmit.bind(this);\n    this.delQuestion = this.delQuestion.bind(this);\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit = (event) => {\n    const title = this.state.formTitle;\n    const description = this.state.formDescription;\n    const listQuestions = this.state.listQuestions;\n    Axios.post(window.BACKEND + '/api/forms/', { title: title, description: description, questions: listQuestions })\n      .then(json => {\n        alert(\"成功新增表單\");\n        this.props.history.push('/dashboard')\n      })\n      .catch(err => {\n        alert(\"尷尬...\");\n      })\n  }\n\n  addQuestion = (event) => {\n    const target = event.target;\n    //const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    const listQuestions = this.state.listQuestions.slice();\n    //alert(this.state.newQuestion, this.state.newQuestionType);\n    listQuestions.push({ 'question_text': this.state.newQuestion, 'question_type': this.state.newQuestionType });\n    this.setState({ listQuestions: listQuestions });\n  }\n\n  delQuestion = (event) => {\n    const target = event.target;\n    //const value = target.type === 'checkbox' ? target.checked : target.value;\n    const q_name = target.value;\n    const idx = parseInt(q_name.split(\"_\")[1])\n    alert('刪除問題: ' + idx);\n    const listQuestions = this.state.listQuestions.slice();\n    listQuestions.splice(idx, 1);\n    this.setState({ listQuestions: listQuestions });\n\n  }\n\n  render() {\n    //const elements = ['one', 'two', 'three'];\n    const items = []\n    for (const [index, value] of this.state.listQuestions.entries()) {\n      const q_name = \"Q_\" + index;\n      if (value['question_type'] === \"select\") {\n        items.push(\n          <div>\n            <Panel>\n              <Panel.Heading><Panel.Title componentClass=\"h3\">第{index + 1}題</Panel.Title> <Button type=\"button\" bsStyle=\"danger\" value={q_name} className=\"new\" onClick={this.delQuestion}>X 刪除這題</Button></Panel.Heading>\n              <Panel.Body>{value['question_text']}</Panel.Body>\n              <Panel.Footer>\n              <FormControl componentClass=\"select\" \n                name={q_name} \n                //value={this.state.listAnswers[index]['answer']} \n                onChange={this.handleInputChangeForm}>\n                <option value=\"A\">A</option>\n                <option value=\"B\">B</option>\n                <option value=\"C\">C</option>\n                <option value=\"D\">D</option>\n              </FormControl>\n              </Panel.Footer>\n            </Panel>\n          </div>\n        );\n      } else if (value['question_type'] === \"text\") {\n        items.push(\n\n          <div>\n            <Panel>\n              <Panel.Heading><Panel.Title componentClass=\"h3\">第{index + 1}題</Panel.Title>  <Button type=\"button\" bsStyle=\"danger\" value={q_name} className=\"new\" onClick={this.delQuestion}>X 刪除這題</Button></Panel.Heading>\n              <Panel.Body>{value['question_text']}</Panel.Body>\n              <Panel.Footer>\n              <FormControl name={q_name}\n                type=\"text\"\n                //value={this.state.listAnswers[index]['answer']}\n                onChange={this.handleInputChangeForm} />\n              </Panel.Footer>\n            </Panel>\n          </div>\n          \n        );\n      }\n    }\n\n    return (\n\n      <Grid>\n        <Row>\n          <Col xs={12} md={12}>\n            <PageHeader>\n              新增問卷<small></small>\n            </PageHeader>\n            <Panel bsStyle=\"info\">\n              <Panel.Heading>\n                <Panel.Title componentClass=\"h3\">問卷設定</Panel.Title>\n              </Panel.Heading>\n              <Panel.Body>\n                \n                  <FormGroup controlId=\"\">\n                    <Col xs={12} md={4}>\n                      <ControlLabel>問卷標題</ControlLabel>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <FormControl name=\"formTitle\"\n                        type=\"text\"\n                        value={this.state.formTitle}\n                        onChange={this.handleInputChange} />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup controlId=\"\">\n                    <Col xs={12} md={4}>\n                      <ControlLabel>問卷說明</ControlLabel>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <FormControl name=\"formDescription\"\n                        type=\"text\"\n                        value={this.state.formDescription}\n                        onChange={this.handleInputChange} />\n                    </Col>\n                  </FormGroup>\n                  </Panel.Body>\n              </Panel>\n              {items}\n              <Panel bsStyle=\"warning\">\n              <Panel.Heading>\n                <Panel.Title componentClass=\"h3\">+新問題</Panel.Title>\n              </Panel.Heading>\n              <Panel.Body>\n                  <FormGroup controlId=\"\">\n                    <Col xs={12} md={4}>\n                      <ControlLabel>敘述</ControlLabel>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <FormControl name=\"newQuestion\"\n                        componentClass=\"textarea\"\n                        value={this.state.newQuestion}\n                        onChange={this.handleInputChange} />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup controlId=\"\">\n                    <Col xs={12} md={4}>\n                      <ControlLabel>題型</ControlLabel>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <FormControl componentClass=\"select\" name=\"newQuestionType\" value={this.state.newQuestionType} onChange={this.handleInputChange}>\n                        <option value=\"text\">簡答題</option>\n                        <option value=\"select\">單選題</option>\n                      </FormControl>\n                    </Col>\n                  </FormGroup>\n                  <Button type=\"button\" className=\"new\" onClick={this.addQuestion}>新增問題</Button>\n                  \n                </Panel.Body>\n            </Panel>\n            <Button type=\"submit\" value=\"submit\" onClick={this.handleSubmit}>完成~新增問卷!</Button>\n          </Col>\n          \n        </Row>\n      </Grid>\n\n\n\n      // <form method=\"post\" onSubmit={this.handleSubmit} >\n      //   {/* <label>\n      //       Is going:\n      //       <input\n      //         name=\"isGoing\"\n      //         type=\"checkbox\"\n      //         checked={this.state.isGoing}\n      //         onChange={this.handleInputChange} />\n      //     </label>\n      //     <br />\n      //     <label>\n      //       Number of guests:\n      //       <input\n      //         name=\"numberOfGuests\"\n      //         type=\"number\"\n      //         value={this.state.numberOfGuests}\n      //         onChange={this.handleInputChange} />\n      //     </label> */}\n      //   <label>\n      //     New Question:\n      //           <input\n      //       name=\"formTitle\"\n      //       type=\"text\"\n      //       value={this.state.formTitle}\n      //       onChange={this.handleInputChange} />\n      //   </label>\n\n      //   <label>\n      //     New Question:\n      //       <input\n      //       name=\"formDescription\"\n      //       type=\"text\"\n      //       value={this.state.formDescription}\n      //       onChange={this.handleInputChange} />\n      //   </label>\n\n      //   <label>\n      //     New Question:\n      //       <input\n      //       name=\"newQuestion\"\n      //       type=\"text\"\n      //       value={this.state.newQuestion}\n      //       onChange={this.handleInputChange} />\n      //   </label>\n      //   <label>\n      //     Question Type:\n      //         <select name=\"newQuestionType\" value={this.state.newQuestionType} onChange={this.handleInputChange}>\n      //       <option value=\"text\">簡答題</option>\n      //       <option value=\"select\">單選題</option>\n      //     </select>\n      //   </label>\n      //   <button type=\"button\" className=\"new\" onClick={this.addQuestion}>\n      //     新增問題\n      //     </button>\n\n      //   {items}\n      //   <button type=\"submit\" value=\"submit\">\n      //     新增問卷\n      //     </button>\n      // </form>\n    );\n  }\n}\n\n\n\nexport default CreateForm;\n","import React, { Component } from 'react';\nimport {\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  PageHeader,\n  Panel,\n  FormLabel,\n  Button,\n  Alert,\n  Form,\n  Grid,\n  Row,\n  Col,\n  Tabs,\n  Tab,\n} from 'react-bootstrap';\n\nimport Axios from 'axios';\nAxios.defaults.withCredentials = true;\n\n\nclass FillForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isGoing: true,\n      numberOfGuests: 2,\n      formTitle: \"Sample Title\",\n      formDescription: \"Sample Form Description\",\n      listAnswers: [],\n      listQuestions: [{ 'question_text': '1+1=?', 'question_type': 'text' }, { 'question_text': '2+2=? A: 4 B:5 C:6 D:7', 'question_type': 'select' }],\n    };\n    \n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleInputChangeForm = this.handleInputChangeForm.bind(this);\n    //this.addQuestion = this.addQuestion.bind(this);\n    this.handelSubmit = this.handleSubmit.bind(this);\n    //this.delQuestion = this.delQuestion.bind(this);\n  }\n\n  componentDidMount() {\n    Axios.get(window.BACKEND + '/api/forms/' + this.props.match.params.FormId)\n      .then(json => {\n        json = json.data\n        //parse data\n        let listQuestions = json.questions\n        let listAnswers = [];\n        for (const [index, value] of listQuestions.entries()){\n          listAnswers.push([{'question_id': 'Q_'+index, 'answer': ''}]);\n        }\n        this.setState({\n          listAnswers: listAnswers,\n          listQuestions: listQuestions,\n          formTitle: json.title,\n          formDescription: json.description,\n        });\n      })\n      .catch(err => {\n        alert('尷尬...')\n      })\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleInputChangeForm = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    const idx = parseInt(name.split(\"_\")[1]);\n    //alert(idx);\n    this.setState({\n      [name]: value\n    });\n    const listAnswers = this.state.listAnswers.slice();\n    listAnswers[idx]['answer'] = value;\n    this.setState({ listAnswers: listAnswers });\n\n  }\n\n  handleSubmit = (event) => {\n    const FormId = this.props.match.params.FormId;\n    let listAnswers = this.state.listAnswers;\n    let listAnswers_organize = listAnswers.map(answerObj => answerObj.answer)\n    Axios.post(window.BACKEND + '/api/forms/' + FormId, { answers: listAnswers_organize })\n      .then(json => {\n        alert(\"成功填寫表單\");\n        this.props.history.push('/home')\n      })\n      .catch(err => {\n        alert('尷尬...')\n      })\n  }\n\n  render() {\n    const elements = ['one', 'two', 'three'];\n    const items = []\n\n    for (const [index, value] of this.state.listQuestions.entries()) {\n      const q_name = \"Q_\" + index;\n      if (value['question_type'] === \"select\") {\n        items.push(\n          <div>\n            <Panel>\n              <Panel.Heading><Panel.Title componentClass=\"h3\">第{index + 1}題</Panel.Title></Panel.Heading>\n              <Panel.Body>{value['question_text']}</Panel.Body>\n              <Panel.Footer>\n              <FormControl componentClass=\"select\" \n                name={q_name} \n                //value={this.state.listAnswers[index]['answer']} \n                onChange={this.handleInputChangeForm}>\n                <option value=\"A\">A</option>\n                <option value=\"B\">B</option>\n                <option value=\"C\">C</option>\n                <option value=\"D\">D</option>\n              </FormControl>\n              </Panel.Footer>\n            </Panel>\n          </div>\n        );\n      } else if (value['question_type'] === \"text\") {\n        items.push(\n\n          <div>\n            <Panel>\n              <Panel.Heading><Panel.Title componentClass=\"h3\">第{index + 1}題</Panel.Title></Panel.Heading>\n              <Panel.Body>{value['question_text']}</Panel.Body>\n              <Panel.Footer>\n              <FormControl name={q_name}\n                type=\"text\"\n                //value={this.state.listAnswers[index]['answer']}\n                onChange={this.handleInputChangeForm} />\n              </Panel.Footer>\n            </Panel>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <Grid>\n        <Row>\n          <Col xs={12} md={12}>\n            <PageHeader>\n              {this.state.formTitle} <small></small>\n            </PageHeader>\n            <Panel>\n              <Panel.Body>{this.state.formDescription}</Panel.Body>\n            </Panel>\n              {items}\n              <Button type=\"submit\" value=\"submit\" onClick={this.handleSubmit}>我填完了!</Button>\n          </Col>\n        </Row>\n      </Grid>\n    );\n  }\n}\n\n\n\nexport default FillForm;\n","import React, {Component} from 'react';\nimport {BrowserRouter, Switch, Route, Link, NavLink} from 'react-router-dom';\nimport {Button, group,Grid,Row,Col, PageHeader} from 'react-bootstrap'; \n\nimport FormCreate from '../content/FormCreate';\nimport FillForm from '../content/FillForm';\n\nimport Axios from 'axios';\nAxios.defaults.withCredentials = true;\n\nclass Unfilled extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const items = []\n    for (const [index, value] of this.props.FormList.entries()){\n      var route = '/forms/'+ value['id']\n      items.push(\n        <ul class=\"list-group\"> \n          <li class=\"list-group-item\">\n            <Link to= {route}> <h3>{value['title']}</h3> </Link>\n          </li>\n      </ul>\n       )\n    }\n    \n    return (  \n      <div class=\"panel panel-primary \">\n        <div class=\"panel-heading\">\n          <h3 class=\"panel-title\">\n              未填\n          </h3>\n        </div>\n          <div class=\"panel-body\">\n             {items}\n          </div>\n      </div>\n    );\n  }\n}\n\nclass Filled extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const items = []\n    for (const [index, value] of this.props.FormList.entries()){\n      items.push(\n        <ul class=\"list-group\"> \n          <h3 class=\"list-group-item\">\n            {value['title']}\n          </h3>\n        </ul>\n       )\n    }\n    \n    return (  \n      <div class=\"panel panel-success \">\n        <div class=\"panel-heading\">\n          <h3 class=\"panel-title\">\n              已填\n          </h3>\n        </div>\n          <div class=\"panel-body\">\n             {items}\n          </div>\n      </div>\n    );\n  }\n}\n\nclass Due extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const items = []\n    for (const [index, value] of this.props.FormList.entries()){\n      items.push(\n        <ul class=\"list-group-item\"> \n          <h3 style={{height: \"1em\", fontWeight: \"900\"}} class=\"list-group-title\">\n            {value['title']}\n          </h3>\n        </ul>\n      )\n      items.push(\n        <li class=\"list-group-item\">\n          { value['winners'].map(winner => <span style={{display: 'inline-block', margin: '0 20px', fontSize: '18px'}}>{winner}</span>) }\n        </li>\n      )\n    }\n    \n    return (  \n      <div class=\"panel panel-warning \">\n        <div class=\"panel-heading\">\n          <h3 class=\"panel-title\">\n              已開獎\n          </h3>\n        </div>\n        <div class=\"panel-body\">\n           {items}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dueList : [],\n      filledList : [],\n      unfilledList : []\n    };\n  }\n  \n  componentDidMount() {\n    Axios.get(`${window.BACKEND}/api/forms`)\n      .then(response => {\n        this.setState({\n          dueList: response.data.due,\n          filledList: response.data.filled,\n          unfilledList: response.data.unfilled\n        });\n      }).catch(err => {\n        alert('Something wrong in Home.js')\n      })\n  }\n  \n  render() {\n    return (\n     <Grid>\n        <Row>\n          <Col><PageHeader>問卷填答系統</PageHeader></Col>\n        </Row>\n        <Row>\n          <Col><Unfilled FormList={this.state.unfilledList}/></Col>\n          <Col><Filled FormList={this.state.filledList}/></Col>\n          <Col><Due FormList={this.state.dueList}/></Col>\n        </Row>\n        <Row>\n        <Col>\n        <Link to='/forms/new'>\n          <button type=\"button\" class=\"btn btn-primary btn-block\">\n            <h3> 創建問卷 </h3>\n          </button>\n        </Link>\n        </Col>\n        </Row>\n      </Grid>\n    );\n  }\n}\n\nexport default Home;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {\n\tFormGroup,\n\tFormControl,\n\tControlLabel,\n\tFormLabel,\n\tButton,\n\tAlert,\n\tForm,\n\tGrid,\n\tRow,\n\tCol,\n\tTabs,\n\tTab,\n\tPanel,\n\tPageHeader\n} from 'react-bootstrap';\n\nimport Axios from 'axios';\nAxios.defaults.withCredentials = true;\n\nclass FormPreview extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thas_drawn: this.props.value.has_drawn,\n\t\t\twinners: this.props.value.winners,\n\t\t\texist: true,\n      form_id: this.props.value.form_id\n\t\t};\n\t}\n\n\thandleDeleteRequest = (event) => {\n\t\tlet form_id = this.props.value.form_id;\n\t\tAxios.post(window.BACKEND + '/api/forms/' + form_id + '/delete/')\n\t\t\t.then(json => {\n\t\t\t\t// alert(\"good\");\n\t\t\t\tthis.setState({\n          exist: false,\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\talert('ggg...');\n\t\t\t});\n\t}\n\n\thandleDrawRequest = (event) => {\n\t\tlet form_id = this.props.value.form_id;\n\t\tAxios.get(window.BACKEND + '/api/forms/' + form_id + '/due/', {})\n\t\t\t.then(json => {\n\t\t\t\t// alert(\"��𣂼��𡂝���\");\n\t\t\t\tlet data = json.data;\n\n\t\t\t\tthis.setState({\n\t\t\t\t\thas_drawn: true,\n          winners: data.winners,\n\t\t\t\t});\n\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\talert('ggg,..')\n\t\t\t});\n\t}\n\n\trender() {\n\t\tlet brief_description = (this.props.value.description.length > max_char_cnt) ? this.props.value.description.substring(0, max_char_cnt) + '...': this.props.value.description;\n\t\tlet hyperlink = 'forms/' + this.props.value.form_id;\n\t\tif (!this.state.exist) {\n\t\t\treturn (\n\t\t\t\t<div/>\n\t\t\t);\n\t\t}\n\t\tif (!this.state.has_drawn) {\n\t\t\treturn (\n\t\t\t\t<Panel bsStyle=\"info\">\n\t\t\t\t\t<Panel.Heading>\n\t\t\t\t\t\t<Panel.Title componentClass=\"h3\"> <Link to={hyperlink}>{this.props.value.title}</Link> </Panel.Title>\n\t\t\t\t\t</Panel.Heading>\n\t\t\t\t\t<Panel.Body>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Col xs={12} sm={4} md={4}>\n\t\t\t\t\t\t\t\t<ControlLabel> 說明 </ControlLabel>\n\t\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t\t<Col xs={12} sm={6} md={6}>\n\t\t\t\t\t\t\t\t<ControlLabel> {brief_description} </ControlLabel>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</FormGroup>\n            {\n              this.state.form_id && <Link to={'/forms/' + this.state.form_id + '/summary'}>統計</Link>\n            }\n\t\t\t\t\t\t<Button bsStyle=\"danger\" bsSize=\"small\" onClick={this.handleDeleteRequest}>刪除</Button>\n          </Panel.Body>\n\t\t\t\t\t<Button bsStyle=\"success\" onClick={this.handleDrawRequest} block>抽獎</Button>\n\t\t\t\t</Panel>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Panel bsStyle=\"info\">\n\t\t\t\t\t<Panel.Heading>\n\t\t\t\t\t\t<Panel.Title componentClass=\"h3\"> <Link to={hyperlink}>{this.props.value.title}</Link> </Panel.Title>\n\t\t\t\t\t</Panel.Heading>\n\t\t\t\t\t<Panel.Body>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Col xs={12} sm={4} md={4}>\n\t\t\t\t\t\t\t\t<ControlLabel> 說明 </ControlLabel>\n\t\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t\t<Col xs={12} sm={6} md={6}>\n\t\t\t\t\t\t\t\t<ControlLabel> {brief_description} </ControlLabel>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Col xs={12} sm={4} md={4}>\n\t\t\t\t\t\t\t\t<ControlLabel> 中獎者 </ControlLabel>\n\t\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t\t<Col xs={12} sm={6} md={6}>\n                <ControlLabel> \n                    {\n                      this.state.winners.map(winner => (\n                        <span style={{display: 'inline-block', margin: '0 5px'}}>{winner}</span>\n                      ))\n                    }\n                </ControlLabel>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</FormGroup>\n            {\n              this.state.form_id && <Link to={'/forms/' + this.state.form_id + '/summary'}>統計</Link>\n            }\n\t\t\t\t\t\t<Button bsStyle=\"danger\" bsSize=\"small\" onClick={this.handleDeleteRequest}>刪除</Button>\n\t\t\t\t\t</Panel.Body>\n\t\t\t\t</Panel>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport const max_char_cnt = 10;\nexport default FormPreview;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {\n\tFormGroup,\n\tFormControl,\n\tControlLabel,\n\tFormLabel,\n\tButton,\n\tAlert,\n\tForm,\n\tGrid,\n\tRow,\n\tCol,\n\tTabs,\n\tTab,\n\tPanel,\n\tPageHeader\n} from 'react-bootstrap';\n\nimport Axios from 'axios';\n\nimport FormPreview from './FormPreview';\n\nAxios.defaults.withCredentials = true;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.state = {\n\t\tpreview_list: [],\n\t};\n  }\n\n  componentDidMount() {\n\tAxios.get(window.BACKEND + '/api/forms/my/', {})\n\t\t.then(json => {\n\t\t\tlet data = json.data\n\t\t\tconsole.log(data);\n\n\t\t\tlet preview_list = [];\n\n\t\t\tfor (let item of data.form) {\n\t\t\t\tpreview_list.push({'form_id': item._id, 'title': item.title, \"description\": item.description, \"has_drawn\": item.isDue, \"winners\": item.winners})\n\t\t\t}\n\n\t\t\tconsole.log(preview_list)\n\n\t\t\tthis.setState({\n\t\t\t\tpreview_list: preview_list,\n\t\t\t});\n\t\t})\n\t\t.catch(err => {\n\t\t\talert('尷尬...')\n\t\t});\n  }\n\n  render() {\n\tlet items = [];\n\tfor (let entry of this.state.preview_list) {\n\t\titems.push(\n\t\t\t<FormPreview value={entry}>\n\t\t\t</FormPreview>\n\t\t);\n  }\n\n    return (\n      <div>\n        <Link to='/forms/new'>\n          <button type=\"button\" class=\"btn btn-primary btn-block\">\n            <h3> 創建問卷 </h3>\n          </button>\n        </Link>\n        <Grid>\n          <PageHeader> 我的問卷 </PageHeader>\n            {items}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, {Component} from 'react';\nimport Plot from 'react-plotly.js';\nimport {Panel, ListGroup, ListGroupItem} from 'react-bootstrap'\n\nimport Axios from 'axios';\nAxios.defaults.withCredentials = true;\n\nclass Summary extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  componentDidMount() {\n    Axios.get(`${window.BACKEND}/api/forms/${this.props.match.params.FormId}/summary`)\n      .then(response => {\n        let form = response.data.form\n        let answers = response.data.answers\n        console.log(form)\n        console.log(answers)\n        this.setState({form, answers})\n      })\n      .catch(err => {\n        alert('ERROR in Summary.js')\n      })\n  }\n\n  range = n => Array.from(Array(n).keys())\n\n  render() {\n    return (\n      this.state.form ?\n      <div style={{width: \"80%\", padding: \"30px\", margin: \"auto\"}}>\n        <h1>{this.state.form.title}</h1>\n        <h3>{this.state.form.description}</h3>\n          {\n            this.range(this.state.form.questions.length).map(index => {\n              var question = this.state.form.questions[index]\n              if (question.question_type !== \"text\") {\n                const mapping = {'A': 0, 'B': 1, 'C': 2, 'D': 3}\n                let values = [0, 0, 0, 0]\n                for (let answer of this.state.answers) {\n                  values[mapping[answer.answers[index]]] += 1\n                }\n                var data = [{\n                  values: values,\n                  labels: ['A', 'B', 'C', 'D'],\n                  type: 'pie'\n                }];\n                var layout = {\n                  height: 400,\n                  width: 500\n                };\n              }\n              return (\n                <div key={'panel' + index}>\n                  <Panel>\n                    <Panel.Heading>{question.question_text}</Panel.Heading>\n                      {\n                        question.question_type === \"text\" ? \n                          <ListGroup>\n                              {\n                                this.state.answers.map(answer =>\n                                  <ListGroupItem>{answer.answers[index]}</ListGroupItem>\n                                )\n                              }\n                          </ListGroup>\n                        :\n                          <Plot data={data} layout={layout} />\n                      }\n                    <Panel.Body>Some more panel content here.</Panel.Body>\n                  </Panel>\n                </div>\n              )\n            })\n          }\n      </div>    \n      :\n      <p>Loading...</p>\n    );\n  }\n}\n\nexport default Summary;\n\n","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route, Link, Redirect} from 'react-router-dom';\n\nimport './App.css';\nimport { \n  Grid, \n  Row,\n  Col,\n  Tabs,\n  Tab,\n} from 'react-bootstrap'; \nimport SignUp from '../signup/signup';\nimport LogIn from '../login/login';\nimport Home from '../content/Home';\nimport Dashboard from '../content/Dashboard'; \nimport FormCreate from '../content/FormCreate';\nimport FillForm from '../content/FillForm';\nimport Summary from '../content/Summary';\n\nimport Axios from 'axios';\nAxios.defaults.withCredentials = true;\n\n\nclass App extends Component { \n  constructor( props, context) {\n    super(props, context);\n\n    this.stateChanger = this.stateChanger.bind(this);\n    this.logOutClicked = this.logOutClicked.bind(this);\n\n    this.state = {\n      loggedIn: false,\n      logOutButtonStatus: 'warning',\n      logOutLoadingMessage: 'Log Out',\n      logOutLoading: false,\n    }\n  }\n\n  stateChanger(newState) {\n    this.setState(newState);\n  }\n\n  componentDidMount() {\n    // Verify session\n    Axios.get(window.BACKEND + '/api/account/verify')\n      .then(json => {\n        json = json.data\n        if (json.success) {\n          this.setState({\n            logOutLoading: false,\n            loggedIn: true,\n          });\n        } else {\n          this.setState({\n            logOutLoading: false,\n          });\n        }\n      });\n  } \n\n  logOutClicked() {\n    this.setState({\n      logOutLoading: true,\n      logOutLoadingMessage: 'Logging Out...',\n      logOutButtonStatus: 'info',\n    });\n    // Verify session\n    Axios.get(window.BACKEND + '/api/account/logout')\n      .then(json => {\n        json = json.data\n        if (json.success) {\n          this.setState({\n            logOutLoading: false,\n            loggedIn: false,\n          });\n        } else {\n          this.setState({\n            logOutLoading: false,\n          });\n        }\n      });\n  }  \n\n\n  render() {\n    let logoutlink = `${window.BACKEND}/api/account/logout`\n    return (\n      <div className=\"App\">\n        <BrowserRouter> {this.state.loggedIn ?\n            <div>\n              <Link to='/'>Home</Link>\n              <Link to='/dashboard'>Dashboard</Link>\n              <a href={logoutlink}>logout</a>\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/dashboard' component={Dashboard} />\n                <Route exact path='/forms/new' component={FormCreate} />\n                <Route exact path='/forms/:FormId' component={FillForm} />\n                <Route exact path='/forms/:FormId/summary' component={Summary} />\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n            :\n            <Grid>\n              <Row>\n                <Col xs={12} md={12}>\n                  <div className = \"loginBoxContainer\">\n                    <Tabs defaultActiveKey={1} id=\"uncontrolled-tab-example\">\n                      <Tab eventKey={1} title=\"Login\" className=\"tabContent\">\n                        <LogIn stateChanger = {this.stateChanger}/>\n                      </Tab>\n                      <Tab eventKey={2} title=\"Sign Up\" className=\"tabContent\">\n                        <SignUp />\n                      </Tab>\n                    </Tabs>\n                  </div>\n                </Col>\n              </Row>\n              </Grid>}\n            </BrowserRouter>\n          </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nwindow.BACKEND = 'http://localhost:9090'\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}